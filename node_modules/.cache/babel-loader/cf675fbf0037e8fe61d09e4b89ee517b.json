{"ast":null,"code":"var _jsxFileName = \"/Users/trantrungchinh/Desktop/minimal-main/src/components/@material-extend/MChip.js\";\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react'; // material\n\nimport { alpha, experimentalStyled as styled, emphasize } from '@material-ui/core/styles';\nimport { Chip } from '@material-ui/core'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChipStyle = styled(Chip)(({\n  theme,\n  styleProps\n}) => {\n  const {\n    color,\n    variant,\n    clickable,\n    onDelete\n  } = styleProps; // Filled\n\n  const styleFilled = color => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n    '& .MuiChip-icon': {\n      color: 'inherit'\n    },\n    '& .MuiChip-avatar': {\n      color: theme.palette[color].lighter,\n      backgroundColor: theme.palette[color].dark\n    },\n    '& .MuiChip-deleteIcon': {\n      color: alpha(theme.palette[color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[color].contrastText\n      }\n    }\n  });\n\n  const styleFilledClickable = color => ({\n    '&:hover, &:focus': {\n      backgroundColor: emphasize(theme.palette[color].main, theme.palette.action.hoverOpacity)\n    }\n  });\n\n  const styleFilledDeletable = color => ({\n    '&:focus': {\n      backgroundColor: emphasize(theme.palette[color].main, theme.palette.action.focusOpacity)\n    }\n  }); // Outlined\n\n\n  const styleOutlined = color => ({\n    color: theme.palette[color].main,\n    border: `1px solid ${theme.palette[color].main}`,\n    '&:focus, &.MuiChip-clickable:hover': {\n      backgroundColor: alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n    },\n    '& .MuiChip-icon': {\n      color: 'currentColor'\n    },\n    '& .MuiChip-avatar': {\n      color: theme.palette[color].lighter,\n      backgroundColor: theme.palette[color].dark\n    },\n    '& .MuiChip-deleteIcon': {\n      color: alpha(theme.palette[color].main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[color].main\n      }\n    }\n  });\n\n  return { ...(variant === 'filled' ? { ...styleFilled(color),\n      ...(clickable && { ...styleFilledClickable(color)\n      }),\n      ...(onDelete && { ...styleFilledDeletable(color)\n      })\n    } : { ...styleOutlined(color)\n    })\n  };\n}); // ----------------------------------------------------------------------\n\nconst Mchip = /*#__PURE__*/forwardRef(_c = ({\n  color = 'default',\n  variant = 'filled',\n  clickable: clickableProp,\n  onDelete: onDeleteProp,\n  ...other\n}, ref) => {\n  if (color === 'default' || color === 'primary' || color === 'secondary') {\n    return /*#__PURE__*/_jsxDEV(Chip, {\n      ref: ref,\n      color: color,\n      variant: variant,\n      clickable: clickableProp && clickableProp,\n      onDelete: onDeleteProp && onDeleteProp,\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChipStyle, {\n    ref: ref,\n    variant: variant,\n    clickable: clickableProp && clickableProp,\n    onDelete: onDeleteProp && onDeleteProp,\n    styleProps: {\n      color,\n      variant,\n      clickable: clickableProp && clickableProp,\n      onDelete: onDeleteProp && onDeleteProp\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n});\n_c2 = Mchip;\nMchip.propTypes = {\n  clickable: PropTypes.bool,\n  onDelete: PropTypes.func,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n};\nexport default Mchip;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mchip$forwardRef\");\n$RefreshReg$(_c2, \"Mchip\");","map":{"version":3,"sources":["/Users/trantrungchinh/Desktop/minimal-main/src/components/@material-extend/MChip.js"],"names":["PropTypes","forwardRef","alpha","experimentalStyled","styled","emphasize","Chip","ChipStyle","theme","styleProps","color","variant","clickable","onDelete","styleFilled","palette","contrastText","backgroundColor","main","lighter","dark","styleFilledClickable","action","hoverOpacity","styleFilledDeletable","focusOpacity","styleOutlined","border","Mchip","clickableProp","onDeleteProp","other","ref","propTypes","bool","func","oneOf","oneOfType","string"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// material\r\nimport { alpha, experimentalStyled as styled, emphasize } from '@material-ui/core/styles';\r\nimport { Chip } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ChipStyle = styled(Chip)(({ theme, styleProps }) => {\r\n  const { color, variant, clickable, onDelete } = styleProps;\r\n\r\n  // Filled\r\n  const styleFilled = (color) => ({\r\n    color: theme.palette[color].contrastText,\r\n    backgroundColor: theme.palette[color].main,\r\n    '& .MuiChip-icon': { color: 'inherit' },\r\n    '& .MuiChip-avatar': {\r\n      color: theme.palette[color].lighter,\r\n      backgroundColor: theme.palette[color].dark\r\n    },\r\n    '& .MuiChip-deleteIcon': {\r\n      color: alpha(theme.palette[color].contrastText, 0.7),\r\n      '&:hover, &:active': { color: theme.palette[color].contrastText }\r\n    }\r\n  });\r\n\r\n  const styleFilledClickable = (color) => ({\r\n    '&:hover, &:focus': {\r\n      backgroundColor: emphasize(theme.palette[color].main, theme.palette.action.hoverOpacity)\r\n    }\r\n  });\r\n\r\n  const styleFilledDeletable = (color) => ({\r\n    '&:focus': {\r\n      backgroundColor: emphasize(theme.palette[color].main, theme.palette.action.focusOpacity)\r\n    }\r\n  });\r\n\r\n  // Outlined\r\n  const styleOutlined = (color) => ({\r\n    color: theme.palette[color].main,\r\n    border: `1px solid ${theme.palette[color].main}`,\r\n    '&:focus, &.MuiChip-clickable:hover': {\r\n      backgroundColor: alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\r\n    },\r\n    '& .MuiChip-icon': { color: 'currentColor' },\r\n    '& .MuiChip-avatar': {\r\n      color: theme.palette[color].lighter,\r\n      backgroundColor: theme.palette[color].dark\r\n    },\r\n    '& .MuiChip-deleteIcon': {\r\n      color: alpha(theme.palette[color].main, 0.7),\r\n      '&:hover, &:active': { color: theme.palette[color].main }\r\n    }\r\n  });\r\n\r\n  return {\r\n    ...(variant === 'filled'\r\n      ? {\r\n          ...styleFilled(color),\r\n          ...(clickable && { ...styleFilledClickable(color) }),\r\n          ...(onDelete && { ...styleFilledDeletable(color) })\r\n        }\r\n      : {\r\n          ...styleOutlined(color)\r\n        })\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Mchip = forwardRef(\r\n  ({ color = 'default', variant = 'filled', clickable: clickableProp, onDelete: onDeleteProp, ...other }, ref) => {\r\n    if (color === 'default' || color === 'primary' || color === 'secondary') {\r\n      return (\r\n        <Chip\r\n          ref={ref}\r\n          color={color}\r\n          variant={variant}\r\n          clickable={clickableProp && clickableProp}\r\n          onDelete={onDeleteProp && onDeleteProp}\r\n          {...other}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ChipStyle\r\n        ref={ref}\r\n        variant={variant}\r\n        clickable={clickableProp && clickableProp}\r\n        onDelete={onDeleteProp && onDeleteProp}\r\n        styleProps={{\r\n          color,\r\n          variant,\r\n          clickable: clickableProp && clickableProp,\r\n          onDelete: onDeleteProp && onDeleteProp\r\n        }}\r\n        {...other}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nMchip.propTypes = {\r\n  clickable: PropTypes.bool,\r\n  onDelete: PropTypes.func,\r\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\r\n  variant: PropTypes.oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\r\n};\r\n\r\nexport default Mchip;\r\n"]},"metadata":{},"sourceType":"module"}