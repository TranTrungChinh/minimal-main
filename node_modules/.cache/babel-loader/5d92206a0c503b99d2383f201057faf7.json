{"ast":null,"code":"var _jsxFileName = \"/Users/trantrungchinh/Desktop/minimal-main/src/layouts/dashboard/AccountPopover.js\",\n    _s = $RefreshSig$();\n\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport homeFill from '@iconify/icons-eva/home-fill';\nimport personFill from '@iconify/icons-eva/person-fill';\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\nimport { Link as RouterLink } from 'react-router-dom'; // material\n\nimport { alpha } from '@material-ui/core/styles';\nimport { Avatar, Button, Box, Divider, MenuItem, Typography } from '@material-ui/core'; // components\n\nimport { MIconButton } from '../../components/@material-extend';\nimport MenuPopover from '../../components/MenuPopover'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MENU_OPTIONS = [{\n  label: 'Home',\n  icon: homeFill,\n  linkTo: '/'\n}, {\n  label: 'Profile',\n  icon: personFill,\n  linkTo: '#'\n}, {\n  label: 'Settings',\n  icon: settings2Fill,\n  linkTo: '#'\n}]; // ----------------------------------------------------------------------\n\nexport default function AccountPopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MIconButton, {\n      ref: anchorRef,\n      onClick: handleOpen,\n      sx: {\n        padding: 0,\n        width: 44,\n        height: 44,\n        ...(open && {\n          '&:before': {\n            zIndex: 1,\n            content: \"''\",\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            position: 'absolute',\n            bgcolor: theme => alpha(theme.palette.grey[900], 0.72)\n          }\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"My Avatar\",\n        src: \"/static/mock-images/avatars/avatar_default.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      sx: {\n        width: 220\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 1.5,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          noWrap: true,\n          children: \"displayName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: 'text.secondary'\n          },\n          noWrap: true,\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), MENU_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        to: option.linkTo,\n        component: RouterLink,\n        onClick: handleClose,\n        sx: {\n          typography: 'body2',\n          py: 1,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: Icon,\n          icon: option.icon,\n          sx: {\n            mr: 2,\n            width: 24,\n            height: 24\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), option.label]\n      }, option.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          pt: 1.5\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          color: \"inherit\",\n          variant: \"outlined\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AccountPopover, \"Hd6TMPAqlaYCVBM5IMM9OnvyEW4=\");\n\n_c = AccountPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountPopover\");","map":{"version":3,"sources":["/Users/trantrungchinh/Desktop/minimal-main/src/layouts/dashboard/AccountPopover.js"],"names":["Icon","useRef","useState","homeFill","personFill","settings2Fill","Link","RouterLink","alpha","Avatar","Button","Box","Divider","MenuItem","Typography","MIconButton","MenuPopover","MENU_OPTIONS","label","icon","linkTo","AccountPopover","anchorRef","open","setOpen","handleOpen","handleClose","padding","width","height","zIndex","content","borderRadius","position","bgcolor","theme","palette","grey","current","my","px","color","map","option","typography","py","mr","p","pt"],"mappings":"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","sourcesContent":["import { Icon } from '@iconify/react';\r\nimport { useRef, useState } from 'react';\r\nimport homeFill from '@iconify/icons-eva/home-fill';\r\nimport personFill from '@iconify/icons-eva/person-fill';\r\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport { Avatar, Button, Box, Divider, MenuItem, Typography } from '@material-ui/core';\r\n// components\r\nimport { MIconButton } from '../../components/@material-extend';\r\nimport MenuPopover from '../../components/MenuPopover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MENU_OPTIONS = [\r\n  { label: 'Home', icon: homeFill, linkTo: '/' },\r\n  { label: 'Profile', icon: personFill, linkTo: '#' },\r\n  { label: 'Settings', icon: settings2Fill, linkTo: '#' }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountPopover() {\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        ref={anchorRef}\r\n        onClick={handleOpen}\r\n        sx={{\r\n          padding: 0,\r\n          width: 44,\r\n          height: 44,\r\n          ...(open && {\r\n            '&:before': {\r\n              zIndex: 1,\r\n              content: \"''\",\r\n              width: '100%',\r\n              height: '100%',\r\n              borderRadius: '50%',\r\n              position: 'absolute',\r\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72)\r\n            }\r\n          })\r\n        }}\r\n      >\r\n        <Avatar alt=\"My Avatar\" src=\"/static/mock-images/avatars/avatar_default.jpg\" />\r\n      </MIconButton>\r\n\r\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 220 }}>\r\n        <Box sx={{ my: 1.5, px: 2.5 }}>\r\n          <Typography variant=\"subtitle1\" noWrap>\r\n            displayName\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n            email\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Divider sx={{ my: 1 }} />\r\n\r\n        {MENU_OPTIONS.map((option) => (\r\n          <MenuItem\r\n            key={option.label}\r\n            to={option.linkTo}\r\n            component={RouterLink}\r\n            onClick={handleClose}\r\n            sx={{ typography: 'body2', py: 1, px: 2.5 }}\r\n          >\r\n            <Box\r\n              component={Icon}\r\n              icon={option.icon}\r\n              sx={{\r\n                mr: 2,\r\n                width: 24,\r\n                height: 24\r\n              }}\r\n            />\r\n\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n\r\n        <Box sx={{ p: 2, pt: 1.5 }}>\r\n          <Button fullWidth color=\"inherit\" variant=\"outlined\">\r\n            Logout\r\n          </Button>\r\n        </Box>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}